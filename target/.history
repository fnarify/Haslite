compile
run test/function.hsl
test
run
compile
run
test
run
compile
run
compile
run
compile
run
test
compile
run
compile
run
test
compile
test
run
test
compile
test
run
compile
test
run
compile
test
run
compile
run
compile
run
compile
run
compile
run
compile
let a = 1 in 2
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
let a = \x :: Int -> x + 1 in 2
run
test
run
test
run
compile
run
compile
run
test
run
test
run
test
run
test
run
test
run
test
run
test
1 + 2 < 2 * 3 / 1àK
run
test
test-only *execTests
test-only *ExecTests
run
test
run
compile
run
test
test-only *ExecTests
compile
run
compile
compile'
compile
test
test-only *ExecTests
test
compi
test
compile
test
run
test
run
test
run
test
run
test
run
test
run
test
run
test
run
test
(\ a :: Int -> (\ b :: Int ->  a + b) 2) 1
run
test
run
test
test-only *ExecTests
test
clean
test
clean
